module vocoder
#(
    SIZE 480,
    WIDTH 24
)
(
    input clk,
    input [WIDTH-1:0] data_in,
    output [WIDTH-1:0] data_out,
);
    // Loval wires and registers
    reg [WIDTH-1:0] divide_buf [SIZE-1:0];
    
    
    reg cnt_2; // Counter of 2 

    always @ (posedge d_clk) begin
        cnt_2 = ~cnt_2;
        if (cnt_2==1'b1)
            divide_buf_out <= divide_buf[SIZE-1];
            divide_buf <= {divide_buf[SIZE-2:0], data_in};
    end


endmodule
